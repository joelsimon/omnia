function writeiqoe(sac)
% WRITEIQOE(sac)
%
% Write .xlsx file for Ed Urban's IQOE metadata database.
%
% Input:
% sac    Array of SAC filenames
%
% Author: Joel D. Simon
% Contact: jdsimon@alumni.princeton.edu | joeldsimon@gmail.com
% Last modified: 06-May-2025, 24.1.0.2568132 (R2024a) Update 1 on MACA64 (geo_mac)

% Constant attributes
public = 'Public';
contact = 'mermaid@princeton.edu';
cabled = 'autonomous';
freq_range = '0.1 - 10';
duty_cycle = 'Null';
hydrophone = 'High Tech HTI-96-Min Hex';
purpose = 'Null';
acknowledge = 'Null';

% Get deployment dates.
deploy = deploydate;

% Get all GPS fixes -- maybe use ESO locations so this is directory agnostic?
procdir = fullfile(getenv('MERMAID'), 'processed_automaid-v4');
gps = readgps(procdir);

for i = 1:length(sac);
    h = sachdr(sac{i});
    kstnm = h.KSTNM;
    samp_freq(i) = efes(h, true);

    % Start/end lat/lon are the same.
    lat(i) = round(h.STLA, 3);
    lon(i) = round(h.STLO, 3);

    % Get deployment date.
    start_date{i} = datestr(deploy.(kstnm), 29);

    % Determine if float dead (hasn't reported location in 30 days)
    last_gps = gps.(kstnm).date(end);
    if days(datetime('now', 'TimeZone', 'UTC') - last_gps) > 30
        end_date{i} = datestr(last_gps, 29);

    else
        end_date{i} = 'Null';

    end

    % Get water depth and deployment depth.
    ocdp(i) = gebco(lon(i), lat(i));
    stdp(i) = h.STDP;

end

varnames = ["Public or Private", ...
            "Data Contact", ...
            "Cabled or Autonomous", ...
            "Start Lat", ...
            "Start Long", ...
            "End Lat", ...
            "End Long", ...
            "Start Date", ...
            "End of Deployment", ...
            "Freq. Range", ...
            "Sampling Freq. (Hz)", ...
            "Duty Cycle [min/hr]", ...
            "Hydrophone Type", ...
            "Water Depth", ...
            "Deployment Depth," ...
            "Purpose", ...
            "Acknowledgement/Paper Citation"];

T = table(repmat(public, size(lat')), ...
          repmat(contact, size(lat')), ...
          repmat(cabled, size(lat')), ...
          lat(:), ...
          lon(:), ...
          lat(:), ...
          lon(:), ...
          start_date(:), ...
          end_date(:), ...
          repmat(freq_range, size(lat')), ...
          samp_freq(:), ...
          repmat(duty_cycle, size(lat')), ...
          repmat(hydrophone, size(lat')), ...
          ocdp(:), ...
          stdp(:), ...
          repmat(purpose, size(lat')), ...
          repmat(acknowledge, size(lat')), ...
          'VariableNames', varnames);

write(T, fullfile(procdir, 'iqoe_mermaid.xlsx'))
