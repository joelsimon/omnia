#! /bin/zsh
# Usage: MERMAIDfetch
#
# Updates local MERMAID server and handles preliminary matching to EQ catalogs.
#
# No I/O and therefore may require internal editing as it was built for JDS'
# system defaults.
#
# Does NOT check git branches in $MERMAID: server, processed, or events -- make
# sure those are set as needed before execution.
#
# Author: Joel D. Simon
# Contact: jdsimon@alumni.princeton.edu | joeldsimon@gmail.com
# Last modified: 07-Dec-2023, Darwin Kernel Version 18.7.0

echo 'exiting...must edit for geo_mac'
exit 1

# Print help with '-h' or '--help'.
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    sed -ne '/^#/!q;s/^#$/# /;/^# /s/^# //p' < "$0" |
	awk -v f="${1#-h}" '!f && /^Usage:/ || u { u=!/^\s*$/; if (!u) exit } u || f'
    exit 1
fi

# Source conda so that 'conda activate pymaid' works within this shell script.
computer=$(uname -s)
if [ $computer = Linux ]; then
    source /usr/local/anaconda3/etc/profile.d/conda.sh

elif [ $computer = Darwin ]; then
    source /Users/joelsimon/anaconda3/etc/profile.d/conda.sh

else
    echo "Error: MERMAIDfetch only tested on Linux and Mac computers"
    exit 1

fi

# Ensure we were able to source the conda script.
if [ $? -ne 0 ]; then
    echo "Error: unable to source conda.sh -- update path in MERMAIDfetch"
    exit 1

fi

# Keep track of starting directory.
start_dir=`pwd`
cd $MERMAID

# Pull most recent data.
print 'Copying server...\n'
$OMNIA/mermaid/servercopy #>& server_out
print '\n...completed server copy\n'

# # Exit if no new data.
# nosac=$(grep 'nothing to commit' server_out | wc -l)
# rm -f server_out
# if [ $nosac -eq 1 ]; then
#     print '\nNo new files. Exiting MERMAIDfetch.'
#     exit;
# fi

# Decrypt .BIN --> .LOG and concatenate .000, .001, ..., .LOG.
conda activate pymaid
cd $AUTOMAID/preprocess/
python -c "import decrypt; decrypt.decrypt_all('/Users/joelsimon/mermaid/server/')"
python -c "import concatenate; concatenate.concatenate_files('/Users/joelsimon/mermaid/server/')"

# Generate SAC files.
print 'Writing SAC files...\n'
python $AUTOMAID/scripts/main.py -s $MERMAID/server -p $MERMAID/processed
conda deactivate
print '\n...completed writing SAC files\n'

# # Generate raw matches to the IRIS catalog.  Note that upon exiting MATLAB you
# # may get the following message.
# #
# #    Identifier: 'MATLAB:connector:connector:ConnectorNotRunning'
# #     Arguments: {}
# #
# # I have only noticed this since adding the parallel writechangepointall.m to
# # matchall.m.  I assume it has something to do with MATLAB closing before the
# # parallel pool is completely shut down.  Doesn't seem to affect the output of
# # this code, however.
# print '\nGenerating preliminary match to global seismic catalogs...\n'
# /Applications/MATLAB_R2017b.app/bin/matlab -r \
#    "run matchall.m; run lastdive.m; run exit" >& /dev/null
# print '\n..done with preliminary match to the seismic catalogs\n'
/Applications/MATLAB_R2017b.app/bin/matlab -r "run lastdive.m; run exit" >& /dev/null

# Write "acq started", "acq stopped" logs
$OMNIA/mermaid/write_processed_acq_log

# Print the last surfacing of each float.
print '\nHere are the dates each float last surfaced:\n'
$OMNIA/mermaid/lastsurface

# Display contents of *.out file with errors in last dive.
print '\nHere are any errors in the *.out files:\n'
cat $MERMAID/processed/lastdive_error.txt

# Display current count.
print '\nHere is the complete list:\n'
$OMNIA/mermaid/countsac

# Return from whence you came.
cd $start_dir
